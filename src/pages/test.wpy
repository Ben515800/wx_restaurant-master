<template>
<!--
  <view class="{{currentPage==0?'':'hidden'}}">
    <addressList :list.sync="addressList" @currentPage.user="getCurrentPage"></addressList>
  </view>
  <view class="{{currentPage==1?'':'hidden'}}">
    <addressAdd @currentPage.user="getCurrentPage"></addressAdd>
  </view> 
  <view class="{{currentPage==2?'':'hidden'}}">
    <addressEdit @currentPage.user="getCurrentPage" ></addressEdit>
  </view>
-->
	
  <view class="address">
    <view wx:for="{{addressList}}" key="index" index="index" item="item">
      <view class="list_box">
        <!--<swipeDelete :swipeData="item" @delItem.user="handleDelItem">-->
          <view class="address_list" @tap="tapSelAddress">
            <view class="title">
              <view class="user_info textsize2">
                <text class="name">{{item.fName}}</text>
                <text class="phone">{{item.fPhone}}</text>
              </view>
              <view class="active_address text_overflow textsize2">
                <text class="defult" wx:if="{{item.isDefault==1}}"> [默认]</text>
                <view>{{item.fProvinceId ? item.fProvinceId : '省'}} - {{item.fCityId ? item.fCityId : '市' }} - {{item.fAreaId ? item.fAreaId : '区' }}</view>
              </view>
            </view>
            <view class="arrow"  @tap="myAddress" data-item="{{item}}" data-index="0">
            	<i class="iconfont icon-edit" ></i>
            </view>
          </view>
        <!--</swipeDelete>-->
      </view>
    </view>
  </view>


	<view class="add_wrap">
    	<view class="button type_theme_color" @tap="AddAddress">新增地址</view>
  	</view>
</template>

<script>
	import wepy from 'wepy';
	/*
	import AddressList from "../components/address_list";
	import AddressAdd from "../components/address_add";
	import AddressEdit from "../components/address_edit";*/
	import SwipeDelete from '../components/common/wepy-swipe-delete'
	import api from "../api/api";
	import tip from "@/utils/tip";
	import AreaPicker from "../components/common/wepy-area-picker";

	import {
		USER_SPECICAL_INFO,
		TOKEN,
		CUSTID,
		SHOPID,
	} from '@/utils/constant';
	export default class Address extends wepy.page{
		config = {
			navigationBarTitleText: '我的地址',
		}
		components = {
			/*
			addressList: AddressList,
			addressAdd: AddressAdd,
			addressEdit: AddressEdit*/
			
		}
			
		data = {
			shopId:'',
			addressList:[],
			addressInfo:{},
			//显示当前组件 0：列表、1：新增、2：编辑
			currentPage:0,
			type: ""//哪个页面跳转过来的
		}

		onLoad(option){
			this.shopId = wepy.getStorageSync(SHOPID)||{};
			this.currentPage =0;
			//console.log("接受的类型是",option.type);
			this.type =(option.type == undefined?"":option.type);
			this.$invoke("addressList","setOrgType",this.type); 	
		}

		onShow(){
			let that = this;
			that.getUserAddress();
		}

		methods = {
			//通过子组件的$emit()方法向父组件传递值cur 和 id
			// getCurrentPage(cur,id,index){
			// 	this.currentPage = cur;
			// 	//如果是编辑地址控件，就需要传递数据到编辑控件中
			// 	if(cur!=1&&cur!=0){
			// 		this.reachAddressInfo(index);
			// 	}
			// }
		}

		events = {
			// refreshAddList(msg){
			// 	this.getUserAddress();
			// }
		}

		async getUserAddress(){
			let that = this;
			let custId = wepy.getStorageSync(CUSTID)||{};
			const json =await api.getAddressAll({
				query:{
					fShopId:2,
					fCustId:1,
					fId:'',
				}
			});
			console.log("发送getUserAddress请求===",json);
			if(json.data.code == 0){
				this.addressList = json.data.data;
				// this.$invoke("addressList","refreshList",this.addressList);
			}else{
				tip.error(json.data.msg);
			}
			that.showLoading = false;
			this.$apply()
		}

		//根据id查询某个收货地址详情
		async reachAddressInfo(index) {
			console.log("index====",index);
      		this.addressInfo=this.addressList[index];
      		this.$invoke("addressEdit","refresh", this.addressInfo);
    		this.showLoading = false;
	  	}

	  	methods = {
			myAddress(e){
				console.log(e)
				wepy.setStorageSync("name",e.currentTarget.dataset.item.fName)
				wepy.setStorageSync("phone",e.currentTarget.dataset.item.fPhone)
				wepy.setStorageSync("province",e.currentTarget.dataset.item.fProvinceId)
				wepy.setStorageSync("city",e.currentTarget.dataset.item.fCityId)
				wepy.setStorageSync("area",e.currentTarget.dataset.item.fAreaId)
				wepy.setStorageSync("address",e.currentTarget.dataset.item.fAddress)
				wepy.setStorageSync("IsDefault",e.currentTarget.dataset.item.fIsDefault)
				
				wepy.navigateTo({
					url:'/pages/testEdit'
				})
			},
			AddAddress(){
				wepy.navigateTo({
					url:'/pages/testAddAddress'
				})
			}
		}
}

</script>

<style lang="less">
	.hidden{
		display:none;
	}

	.list_box {
  height: 150rpx;
}

.address {
  .list_box:last-child {
    border-bottom: 1px solid #efefef;
  }
  .address_list {
    display: flex;
    justify-content: space-between;
    height: 150rpx;
    align-items: center;
    padding: 0rpx 0px 0px 35rpx;
    border-top: 1px solid #efefef;
    .title {
      color: #000;
    }
    .arrow {
      float:right;
      height: 50rpx;
      width: 50rpx;
      text-align: center;
      color: #9a9a9a;
    }
    .user_info {
      color: #333333;
      .name{
        margin-right:20rpx;
      }
    }
    .active_address {
      margin-top: 20rpx;
      width:600rpx;

    }
    .defult {
      color: #ea4a3a;
    }
  }
}

.add_wrap {
  display: block;
  width: 95%;
  left: 0;
  right: 0;
  position: absolute;
  bottom: 20rpx;
  margin: 0 auto;
}
</style>
